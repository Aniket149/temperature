{"version":3,"sources":["Components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","useState","city","setCity","search","setSearch","useEffect","fetchApi","a","url","fetch","response","json","respJson","main","className","type","placeholder","onChange","event","target","value","temp","temp_min","temp_max","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAuDeA,MApDf,WACE,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAYA,OAXAC,qBAAU,WACR,IAAMC,EAAQ,uCAAG,gCAAAC,EAAA,6DACTC,EADS,2DACiDL,EADjD,iEAEQM,MAAMD,GAFd,cAETE,EAFS,gBAGQA,EAASC,OAHjB,OAGTC,EAHS,OAIfV,EAAQU,EAASC,MAJF,2CAAH,qDAOdP,MACC,CAACH,IAGF,qBAAKW,UAAU,WAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,uBACEC,KAAK,SACLC,YAAY,SACZC,SAAU,SAACC,GACTd,EAAUc,EAAMC,OAAOC,YAI3BnB,EAGA,gCACE,sBAAKa,UAAU,OAAf,UACE,6BACE,mBAAGA,UAAU,yBAEf,6BAAKX,OAEP,sBAAKW,UAAU,OAAf,UACE,+BACGb,EAAKoB,KAAK,6CAEb,qCACOpB,EAAKqB,SAAS,0CADrB,QAC+CrB,EAAKsB,SAAS,mDAdjE,oDCnBKC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fd88e82d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Weather.css\";\r\n\r\nfunction Weather() {\r\n  const [city, setCity] = useState(null);\r\n  const [search, setSearch] = useState(\"\");\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      const url = `http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=a9e3a8b240494d66a0304a42fc2de81f`;\r\n      const response = await fetch(url);\r\n      const respJson = await response.json();\r\n      setCity(respJson.main);\r\n      \r\n    };\r\n    fetchApi();\r\n  }, [search]);\r\n\r\n  return (\r\n    <div className=\"main-box\">\r\n      <div className=\"box\">\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"search\"\r\n            onChange={(event) => {\r\n              setSearch(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        {!city ? (\r\n          <p>No Data Found</p>\r\n        ) : (\r\n          <div>\r\n            <div className=\"city\">\r\n              <h2>\r\n                <i className=\"fas fa-street-view\"></i>\r\n              </h2>\r\n              <h2>{search}</h2>\r\n            </div>\r\n            <div className=\"temp\">\r\n              <h2>\r\n                {city.temp}<span>&#8451;</span>\r\n              </h2>\r\n              <p>\r\n                MIN:{city.temp_min}<span>&#8451;</span>|MAX:{city.temp_max}<span>&#8451;</span>\r\n              </p>\r\n            </div>\r\n            \r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import './App.css';\nimport Weather from './Components/Weather';\n\nfunction App() {\n  return (\n    <div>\n      <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}